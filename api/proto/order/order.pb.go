// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.9.2
// source: order.proto

package order

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type BusinessServiceOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessServiceOrderID  int64  `protobuf:"varint,1,opt,name=businessServiceOrderID,proto3" json:"businessServiceOrderID,omitempty"`
	ClientID                int64  `protobuf:"varint,2,opt,name=clientID,proto3" json:"clientID,omitempty"`
	BusinessServiceID       int64  `protobuf:"varint,3,opt,name=businessServiceID,proto3" json:"businessServiceID,omitempty"`
	BusinessServiceName     string `protobuf:"bytes,4,opt,name=businessServiceName,proto3" json:"businessServiceName,omitempty"`
	StartAt                 string `protobuf:"bytes,5,opt,name=startAt,proto3" json:"startAt,omitempty"`
	EndAt                   string `protobuf:"bytes,6,opt,name=endAt,proto3" json:"endAt,omitempty"`
	CreatedAt               string `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	PrePaid                 bool   `protobuf:"varint,8,opt,name=prePaid,proto3" json:"prePaid,omitempty"`
	ClientFirstName         string `protobuf:"bytes,9,opt,name=clientFirstName,proto3" json:"clientFirstName,omitempty"`
	ClientPhoneNumber       string `protobuf:"bytes,10,opt,name=clientPhoneNumber,proto3" json:"clientPhoneNumber,omitempty"`
	ClientPhoneNumberPrefix string `protobuf:"bytes,11,opt,name=clientPhoneNumberPrefix,proto3" json:"clientPhoneNumberPrefix,omitempty"`
	ClientCommentary        string `protobuf:"bytes,12,opt,name=clientCommentary,proto3" json:"clientCommentary,omitempty"`
}

func (x *BusinessServiceOrder) Reset() {
	*x = BusinessServiceOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BusinessServiceOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessServiceOrder) ProtoMessage() {}

func (x *BusinessServiceOrder) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessServiceOrder.ProtoReflect.Descriptor instead.
func (*BusinessServiceOrder) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{0}
}

func (x *BusinessServiceOrder) GetBusinessServiceOrderID() int64 {
	if x != nil {
		return x.BusinessServiceOrderID
	}
	return 0
}

func (x *BusinessServiceOrder) GetClientID() int64 {
	if x != nil {
		return x.ClientID
	}
	return 0
}

func (x *BusinessServiceOrder) GetBusinessServiceID() int64 {
	if x != nil {
		return x.BusinessServiceID
	}
	return 0
}

func (x *BusinessServiceOrder) GetBusinessServiceName() string {
	if x != nil {
		return x.BusinessServiceName
	}
	return ""
}

func (x *BusinessServiceOrder) GetStartAt() string {
	if x != nil {
		return x.StartAt
	}
	return ""
}

func (x *BusinessServiceOrder) GetEndAt() string {
	if x != nil {
		return x.EndAt
	}
	return ""
}

func (x *BusinessServiceOrder) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *BusinessServiceOrder) GetPrePaid() bool {
	if x != nil {
		return x.PrePaid
	}
	return false
}

func (x *BusinessServiceOrder) GetClientFirstName() string {
	if x != nil {
		return x.ClientFirstName
	}
	return ""
}

func (x *BusinessServiceOrder) GetClientPhoneNumber() string {
	if x != nil {
		return x.ClientPhoneNumber
	}
	return ""
}

func (x *BusinessServiceOrder) GetClientPhoneNumberPrefix() string {
	if x != nil {
		return x.ClientPhoneNumberPrefix
	}
	return ""
}

func (x *BusinessServiceOrder) GetClientCommentary() string {
	if x != nil {
		return x.ClientCommentary
	}
	return ""
}

type GetBusinessServiceOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessServiceOrderID int64 `protobuf:"varint,1,opt,name=businessServiceOrderID,proto3" json:"businessServiceOrderID,omitempty"`
}

func (x *GetBusinessServiceOrderRequest) Reset() {
	*x = GetBusinessServiceOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBusinessServiceOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessServiceOrderRequest) ProtoMessage() {}

func (x *GetBusinessServiceOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessServiceOrderRequest.ProtoReflect.Descriptor instead.
func (*GetBusinessServiceOrderRequest) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1}
}

func (x *GetBusinessServiceOrderRequest) GetBusinessServiceOrderID() int64 {
	if x != nil {
		return x.BusinessServiceOrderID
	}
	return 0
}

type GetBusinessServiceOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessServiceOrder *BusinessServiceOrder `protobuf:"bytes,1,opt,name=businessServiceOrder,proto3" json:"businessServiceOrder,omitempty"`
}

func (x *GetBusinessServiceOrderResponse) Reset() {
	*x = GetBusinessServiceOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBusinessServiceOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessServiceOrderResponse) ProtoMessage() {}

func (x *GetBusinessServiceOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessServiceOrderResponse.ProtoReflect.Descriptor instead.
func (*GetBusinessServiceOrderResponse) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{2}
}

func (x *GetBusinessServiceOrderResponse) GetBusinessServiceOrder() *BusinessServiceOrder {
	if x != nil {
		return x.BusinessServiceOrder
	}
	return nil
}

type GetBusinessServiceOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessServiceID int64 `protobuf:"varint,1,opt,name=businessServiceID,proto3" json:"businessServiceID,omitempty"`
}

func (x *GetBusinessServiceOrdersRequest) Reset() {
	*x = GetBusinessServiceOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBusinessServiceOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessServiceOrdersRequest) ProtoMessage() {}

func (x *GetBusinessServiceOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessServiceOrdersRequest.ProtoReflect.Descriptor instead.
func (*GetBusinessServiceOrdersRequest) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{3}
}

func (x *GetBusinessServiceOrdersRequest) GetBusinessServiceID() int64 {
	if x != nil {
		return x.BusinessServiceID
	}
	return 0
}

type GetBusinessServiceOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessServicesOrders []*BusinessServiceOrder `protobuf:"bytes,1,rep,name=businessServicesOrders,proto3" json:"businessServicesOrders,omitempty"`
}

func (x *GetBusinessServiceOrdersResponse) Reset() {
	*x = GetBusinessServiceOrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBusinessServiceOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessServiceOrdersResponse) ProtoMessage() {}

func (x *GetBusinessServiceOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessServiceOrdersResponse.ProtoReflect.Descriptor instead.
func (*GetBusinessServiceOrdersResponse) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{4}
}

func (x *GetBusinessServiceOrdersResponse) GetBusinessServicesOrders() []*BusinessServiceOrder {
	if x != nil {
		return x.BusinessServicesOrders
	}
	return nil
}

type GetBusinessServiceOrderByDateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessServiceID int64  `protobuf:"varint,1,opt,name=businessServiceID,proto3" json:"businessServiceID,omitempty"`
	Date              string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *GetBusinessServiceOrderByDateRequest) Reset() {
	*x = GetBusinessServiceOrderByDateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBusinessServiceOrderByDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessServiceOrderByDateRequest) ProtoMessage() {}

func (x *GetBusinessServiceOrderByDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessServiceOrderByDateRequest.ProtoReflect.Descriptor instead.
func (*GetBusinessServiceOrderByDateRequest) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{5}
}

func (x *GetBusinessServiceOrderByDateRequest) GetBusinessServiceID() int64 {
	if x != nil {
		return x.BusinessServiceID
	}
	return 0
}

func (x *GetBusinessServiceOrderByDateRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type GetBusinessServiceOrderByDateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessServicesOrders []*BusinessServiceOrder `protobuf:"bytes,1,rep,name=businessServicesOrders,proto3" json:"businessServicesOrders,omitempty"`
}

func (x *GetBusinessServiceOrderByDateResponse) Reset() {
	*x = GetBusinessServiceOrderByDateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBusinessServiceOrderByDateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessServiceOrderByDateResponse) ProtoMessage() {}

func (x *GetBusinessServiceOrderByDateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessServiceOrderByDateResponse.ProtoReflect.Descriptor instead.
func (*GetBusinessServiceOrderByDateResponse) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{6}
}

func (x *GetBusinessServiceOrderByDateResponse) GetBusinessServicesOrders() []*BusinessServiceOrder {
	if x != nil {
		return x.BusinessServicesOrders
	}
	return nil
}

type CreateBusinessServiceOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientID                int64  `protobuf:"varint,1,opt,name=clientID,proto3" json:"clientID,omitempty"`
	BusinessServiceID       int64  `protobuf:"varint,2,opt,name=businessServiceID,proto3" json:"businessServiceID,omitempty"`
	StartAt                 string `protobuf:"bytes,3,opt,name=startAt,proto3" json:"startAt,omitempty"`
	PrePaid                 bool   `protobuf:"varint,4,opt,name=prePaid,proto3" json:"prePaid,omitempty"`
	ClientFirstName         string `protobuf:"bytes,5,opt,name=clientFirstName,proto3" json:"clientFirstName,omitempty"`
	ClientPhoneNumber       string `protobuf:"bytes,6,opt,name=clientPhoneNumber,proto3" json:"clientPhoneNumber,omitempty"`
	ClientPhoneNumberPrefix string `protobuf:"bytes,7,opt,name=clientPhoneNumberPrefix,proto3" json:"clientPhoneNumberPrefix,omitempty"`
	ClientCommentary        string `protobuf:"bytes,8,opt,name=clientCommentary,proto3" json:"clientCommentary,omitempty"`
}

func (x *CreateBusinessServiceOrderRequest) Reset() {
	*x = CreateBusinessServiceOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBusinessServiceOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBusinessServiceOrderRequest) ProtoMessage() {}

func (x *CreateBusinessServiceOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBusinessServiceOrderRequest.ProtoReflect.Descriptor instead.
func (*CreateBusinessServiceOrderRequest) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{7}
}

func (x *CreateBusinessServiceOrderRequest) GetClientID() int64 {
	if x != nil {
		return x.ClientID
	}
	return 0
}

func (x *CreateBusinessServiceOrderRequest) GetBusinessServiceID() int64 {
	if x != nil {
		return x.BusinessServiceID
	}
	return 0
}

func (x *CreateBusinessServiceOrderRequest) GetStartAt() string {
	if x != nil {
		return x.StartAt
	}
	return ""
}

func (x *CreateBusinessServiceOrderRequest) GetPrePaid() bool {
	if x != nil {
		return x.PrePaid
	}
	return false
}

func (x *CreateBusinessServiceOrderRequest) GetClientFirstName() string {
	if x != nil {
		return x.ClientFirstName
	}
	return ""
}

func (x *CreateBusinessServiceOrderRequest) GetClientPhoneNumber() string {
	if x != nil {
		return x.ClientPhoneNumber
	}
	return ""
}

func (x *CreateBusinessServiceOrderRequest) GetClientPhoneNumberPrefix() string {
	if x != nil {
		return x.ClientPhoneNumberPrefix
	}
	return ""
}

func (x *CreateBusinessServiceOrderRequest) GetClientCommentary() string {
	if x != nil {
		return x.ClientCommentary
	}
	return ""
}

type CreateBusinessServiceOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessServiceOrder *BusinessServiceOrder `protobuf:"bytes,1,opt,name=businessServiceOrder,proto3" json:"businessServiceOrder,omitempty"`
}

func (x *CreateBusinessServiceOrderResponse) Reset() {
	*x = CreateBusinessServiceOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBusinessServiceOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBusinessServiceOrderResponse) ProtoMessage() {}

func (x *CreateBusinessServiceOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBusinessServiceOrderResponse.ProtoReflect.Descriptor instead.
func (*CreateBusinessServiceOrderResponse) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{8}
}

func (x *CreateBusinessServiceOrderResponse) GetBusinessServiceOrder() *BusinessServiceOrder {
	if x != nil {
		return x.BusinessServiceOrder
	}
	return nil
}

type GetCompanyServiceInfoByWeekDayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessServiceID int64 `protobuf:"varint,1,opt,name=businessServiceID,proto3" json:"businessServiceID,omitempty"`
	DayOfWeek         int64 `protobuf:"varint,2,opt,name=dayOfWeek,proto3" json:"dayOfWeek,omitempty"`
}

func (x *GetCompanyServiceInfoByWeekDayRequest) Reset() {
	*x = GetCompanyServiceInfoByWeekDayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyServiceInfoByWeekDayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyServiceInfoByWeekDayRequest) ProtoMessage() {}

func (x *GetCompanyServiceInfoByWeekDayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyServiceInfoByWeekDayRequest.ProtoReflect.Descriptor instead.
func (*GetCompanyServiceInfoByWeekDayRequest) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{9}
}

func (x *GetCompanyServiceInfoByWeekDayRequest) GetBusinessServiceID() int64 {
	if x != nil {
		return x.BusinessServiceID
	}
	return 0
}

func (x *GetCompanyServiceInfoByWeekDayRequest) GetDayOfWeek() int64 {
	if x != nil {
		return x.DayOfWeek
	}
	return 0
}

type GetCompanyServiceInfoByWeekDayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyServiceID       int64  `protobuf:"varint,1,opt,name=companyServiceID,proto3" json:"companyServiceID,omitempty"`
	CompanyServiceName     string `protobuf:"bytes,2,opt,name=companyServiceName,proto3" json:"companyServiceName,omitempty"`
	CompanyServiceDuration int64  `protobuf:"varint,3,opt,name=companyServiceDuration,proto3" json:"companyServiceDuration,omitempty"`
	CompanyServicePrice    int64  `protobuf:"varint,4,opt,name=companyServicePrice,proto3" json:"companyServicePrice,omitempty"`
	DayOfWeek              int64  `protobuf:"varint,5,opt,name=dayOfWeek,proto3" json:"dayOfWeek,omitempty"`
	OpenTime               string `protobuf:"bytes,6,opt,name=openTime,proto3" json:"openTime,omitempty"`
	CloseTime              string `protobuf:"bytes,7,opt,name=closeTime,proto3" json:"closeTime,omitempty"`
}

func (x *GetCompanyServiceInfoByWeekDayResponse) Reset() {
	*x = GetCompanyServiceInfoByWeekDayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyServiceInfoByWeekDayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyServiceInfoByWeekDayResponse) ProtoMessage() {}

func (x *GetCompanyServiceInfoByWeekDayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyServiceInfoByWeekDayResponse.ProtoReflect.Descriptor instead.
func (*GetCompanyServiceInfoByWeekDayResponse) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{10}
}

func (x *GetCompanyServiceInfoByWeekDayResponse) GetCompanyServiceID() int64 {
	if x != nil {
		return x.CompanyServiceID
	}
	return 0
}

func (x *GetCompanyServiceInfoByWeekDayResponse) GetCompanyServiceName() string {
	if x != nil {
		return x.CompanyServiceName
	}
	return ""
}

func (x *GetCompanyServiceInfoByWeekDayResponse) GetCompanyServiceDuration() int64 {
	if x != nil {
		return x.CompanyServiceDuration
	}
	return 0
}

func (x *GetCompanyServiceInfoByWeekDayResponse) GetCompanyServicePrice() int64 {
	if x != nil {
		return x.CompanyServicePrice
	}
	return 0
}

func (x *GetCompanyServiceInfoByWeekDayResponse) GetDayOfWeek() int64 {
	if x != nil {
		return x.DayOfWeek
	}
	return 0
}

func (x *GetCompanyServiceInfoByWeekDayResponse) GetOpenTime() string {
	if x != nil {
		return x.OpenTime
	}
	return ""
}

func (x *GetCompanyServiceInfoByWeekDayResponse) GetCloseTime() string {
	if x != nil {
		return x.CloseTime
	}
	return ""
}

type GetCompanyAvailableHoursByDateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessServiceID int64  `protobuf:"varint,1,opt,name=businessServiceID,proto3" json:"businessServiceID,omitempty"`
	Date              string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *GetCompanyAvailableHoursByDateRequest) Reset() {
	*x = GetCompanyAvailableHoursByDateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyAvailableHoursByDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyAvailableHoursByDateRequest) ProtoMessage() {}

func (x *GetCompanyAvailableHoursByDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyAvailableHoursByDateRequest.ProtoReflect.Descriptor instead.
func (*GetCompanyAvailableHoursByDateRequest) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{11}
}

func (x *GetCompanyAvailableHoursByDateRequest) GetBusinessServiceID() int64 {
	if x != nil {
		return x.BusinessServiceID
	}
	return 0
}

func (x *GetCompanyAvailableHoursByDateRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type GetCompanyAvailableHoursByDateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableHour []string `protobuf:"bytes,1,rep,name=availableHour,proto3" json:"availableHour,omitempty"`
}

func (x *GetCompanyAvailableHoursByDateResponse) Reset() {
	*x = GetCompanyAvailableHoursByDateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyAvailableHoursByDateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyAvailableHoursByDateResponse) ProtoMessage() {}

func (x *GetCompanyAvailableHoursByDateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyAvailableHoursByDateResponse.ProtoReflect.Descriptor instead.
func (*GetCompanyAvailableHoursByDateResponse) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{12}
}

func (x *GetCompanyAvailableHoursByDateResponse) GetAvailableHour() []string {
	if x != nil {
		return x.AvailableHour
	}
	return nil
}

type UpdateBusinessServiceOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderID                 int64  `protobuf:"varint,1,opt,name=orderID,proto3" json:"orderID,omitempty"`
	BusinessServiceID       int64  `protobuf:"varint,2,opt,name=businessServiceID,proto3" json:"businessServiceID,omitempty"`
	StartAt                 string `protobuf:"bytes,3,opt,name=startAt,proto3" json:"startAt,omitempty"`
	PrePaid                 bool   `protobuf:"varint,4,opt,name=prePaid,proto3" json:"prePaid,omitempty"`
	ClientFirstName         string `protobuf:"bytes,5,opt,name=clientFirstName,proto3" json:"clientFirstName,omitempty"`
	ClientPhoneNumber       string `protobuf:"bytes,6,opt,name=clientPhoneNumber,proto3" json:"clientPhoneNumber,omitempty"`
	ClientPhoneNumberPrefix string `protobuf:"bytes,7,opt,name=clientPhoneNumberPrefix,proto3" json:"clientPhoneNumberPrefix,omitempty"`
	ClientCommentary        string `protobuf:"bytes,8,opt,name=clientCommentary,proto3" json:"clientCommentary,omitempty"`
}

func (x *UpdateBusinessServiceOrderRequest) Reset() {
	*x = UpdateBusinessServiceOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBusinessServiceOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBusinessServiceOrderRequest) ProtoMessage() {}

func (x *UpdateBusinessServiceOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBusinessServiceOrderRequest.ProtoReflect.Descriptor instead.
func (*UpdateBusinessServiceOrderRequest) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateBusinessServiceOrderRequest) GetOrderID() int64 {
	if x != nil {
		return x.OrderID
	}
	return 0
}

func (x *UpdateBusinessServiceOrderRequest) GetBusinessServiceID() int64 {
	if x != nil {
		return x.BusinessServiceID
	}
	return 0
}

func (x *UpdateBusinessServiceOrderRequest) GetStartAt() string {
	if x != nil {
		return x.StartAt
	}
	return ""
}

func (x *UpdateBusinessServiceOrderRequest) GetPrePaid() bool {
	if x != nil {
		return x.PrePaid
	}
	return false
}

func (x *UpdateBusinessServiceOrderRequest) GetClientFirstName() string {
	if x != nil {
		return x.ClientFirstName
	}
	return ""
}

func (x *UpdateBusinessServiceOrderRequest) GetClientPhoneNumber() string {
	if x != nil {
		return x.ClientPhoneNumber
	}
	return ""
}

func (x *UpdateBusinessServiceOrderRequest) GetClientPhoneNumberPrefix() string {
	if x != nil {
		return x.ClientPhoneNumberPrefix
	}
	return ""
}

func (x *UpdateBusinessServiceOrderRequest) GetClientCommentary() string {
	if x != nil {
		return x.ClientCommentary
	}
	return ""
}

type UpdateBusinessServiceOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessServiceOrder *BusinessServiceOrder `protobuf:"bytes,1,opt,name=businessServiceOrder,proto3" json:"businessServiceOrder,omitempty"`
}

func (x *UpdateBusinessServiceOrderResponse) Reset() {
	*x = UpdateBusinessServiceOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBusinessServiceOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBusinessServiceOrderResponse) ProtoMessage() {}

func (x *UpdateBusinessServiceOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBusinessServiceOrderResponse.ProtoReflect.Descriptor instead.
func (*UpdateBusinessServiceOrderResponse) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateBusinessServiceOrderResponse) GetBusinessServiceOrder() *BusinessServiceOrder {
	if x != nil {
		return x.BusinessServiceOrder
	}
	return nil
}

type DeleteBusinessServiceOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderID int64 `protobuf:"varint,1,opt,name=orderID,proto3" json:"orderID,omitempty"`
}

func (x *DeleteBusinessServiceOrderRequest) Reset() {
	*x = DeleteBusinessServiceOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBusinessServiceOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBusinessServiceOrderRequest) ProtoMessage() {}

func (x *DeleteBusinessServiceOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBusinessServiceOrderRequest.ProtoReflect.Descriptor instead.
func (*DeleteBusinessServiceOrderRequest) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteBusinessServiceOrderRequest) GetOrderID() int64 {
	if x != nil {
		return x.OrderID
	}
	return 0
}

type DeleteBusinessServiceOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessServiceOrder *BusinessServiceOrder `protobuf:"bytes,1,opt,name=businessServiceOrder,proto3" json:"businessServiceOrder,omitempty"`
}

func (x *DeleteBusinessServiceOrderResponse) Reset() {
	*x = DeleteBusinessServiceOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBusinessServiceOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBusinessServiceOrderResponse) ProtoMessage() {}

func (x *DeleteBusinessServiceOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBusinessServiceOrderResponse.ProtoReflect.Descriptor instead.
func (*DeleteBusinessServiceOrderResponse) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteBusinessServiceOrderResponse) GetBusinessServiceOrder() *BusinessServiceOrder {
	if x != nil {
		return x.BusinessServiceOrder
	}
	return nil
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Count  int64 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{17}
}

func (x *Pagination) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Pagination) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *Pagination) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetBusinessServiceOrdersByEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email      string      `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Pagination *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetBusinessServiceOrdersByEmailRequest) Reset() {
	*x = GetBusinessServiceOrdersByEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBusinessServiceOrdersByEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessServiceOrdersByEmailRequest) ProtoMessage() {}

func (x *GetBusinessServiceOrdersByEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessServiceOrdersByEmailRequest.ProtoReflect.Descriptor instead.
func (*GetBusinessServiceOrdersByEmailRequest) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{18}
}

func (x *GetBusinessServiceOrdersByEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetBusinessServiceOrdersByEmailRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetBusinessServiceOrdersByEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessServicesOrders []*BusinessServiceOrder `protobuf:"bytes,1,rep,name=businessServicesOrders,proto3" json:"businessServicesOrders,omitempty"`
	Pagination             *Pagination             `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetBusinessServiceOrdersByEmailResponse) Reset() {
	*x = GetBusinessServiceOrdersByEmailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBusinessServiceOrdersByEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessServiceOrdersByEmailResponse) ProtoMessage() {}

func (x *GetBusinessServiceOrdersByEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessServiceOrdersByEmailResponse.ProtoReflect.Descriptor instead.
func (*GetBusinessServiceOrdersByEmailResponse) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{19}
}

func (x *GetBusinessServiceOrdersByEmailResponse) GetBusinessServicesOrders() []*BusinessServiceOrder {
	if x != nil {
		return x.BusinessServicesOrders
	}
	return nil
}

func (x *GetBusinessServiceOrdersByEmailResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_order_proto protoreflect.FileDescriptor

var file_order_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x22, 0xf0, 0x03, 0x0a, 0x14, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x16,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x2c, 0x0a, 0x11, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x30,
	0x0a, 0x13, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e,
	0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x72, 0x65, 0x50, 0x61, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x70, 0x72, 0x65, 0x50, 0x61, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x38, 0x0a, 0x17, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x17, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x22, 0x58, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x16, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x22, 0x81, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x14, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x14,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x22, 0x4f, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x11, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x44, 0x22, 0x86, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x16, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x16, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x68,
	0x0a, 0x24, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x25, 0x47, 0x65, 0x74,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x62, 0x0a, 0x16, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x16,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0xdf, 0x02, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x11, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x50, 0x61, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x70, 0x72, 0x65, 0x50, 0x61, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x72, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x38, 0x0a, 0x17, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x17, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x2a, 0x0a, 0x10,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x22, 0x84, 0x01, 0x0a, 0x22, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5e, 0x0a, 0x14, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x14, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22,
	0x73, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x57, 0x65, 0x65, 0x6b, 0x44, 0x61,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x79, 0x4f, 0x66, 0x57,
	0x65, 0x65, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x61, 0x79, 0x4f, 0x66,
	0x57, 0x65, 0x65, 0x6b, 0x22, 0xc6, 0x02, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79,
	0x57, 0x65, 0x65, 0x6b, 0x44, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2a, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x12, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65,
	0x65, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x61, 0x79, 0x4f, 0x66, 0x57,
	0x65, 0x65, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x69, 0x0a,
	0x25, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x4e, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x48,
	0x6f, 0x75, 0x72, 0x73, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x48,
	0x6f, 0x75, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x22, 0xdd, 0x02, 0x0a, 0x21, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x11, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x50, 0x61, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x70, 0x72, 0x65, 0x50, 0x61, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x72, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x38, 0x0a, 0x17, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x17, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x2a, 0x0a, 0x10,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x22, 0x84, 0x01, 0x0a, 0x22, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5e, 0x0a, 0x14, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x14, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22,
	0x3d, 0x0a, 0x21, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x22, 0x84,
	0x01, 0x0a, 0x22, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x14, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x14, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x50, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x40, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xcf, 0x01, 0x0a, 0x27, 0x47,
	0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x16, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x16, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x40, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xec, 0x0a, 0x0a,
	0x15, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x88, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x34, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x8b, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x35,
	0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x9a, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x3a, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x44, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa0, 0x01, 0x0a,
	0x1f, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x3c, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d,
	0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0x79,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x9d, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x57, 0x65, 0x65, 0x6b, 0x44,
	0x61, 0x79, 0x12, 0x3b, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x79, 0x57, 0x65, 0x65, 0x6b, 0x44, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3c, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x57, 0x65,
	0x65, 0x6b, 0x44, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x9d, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x42, 0x79, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x3b, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x6f, 0x75,
	0x72, 0x73, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3c, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x42,
	0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x91, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x37,
	0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x91, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x37, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x91, 0x01, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x37, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x38, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e,
	0x3b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_order_proto_rawDescOnce sync.Once
	file_order_proto_rawDescData = file_order_proto_rawDesc
)

func file_order_proto_rawDescGZIP() []byte {
	file_order_proto_rawDescOnce.Do(func() {
		file_order_proto_rawDescData = protoimpl.X.CompressGZIP(file_order_proto_rawDescData)
	})
	return file_order_proto_rawDescData
}

var file_order_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_order_proto_goTypes = []interface{}{
	(*BusinessServiceOrder)(nil),                    // 0: businessServiceOrder.BusinessServiceOrder
	(*GetBusinessServiceOrderRequest)(nil),          // 1: businessServiceOrder.GetBusinessServiceOrderRequest
	(*GetBusinessServiceOrderResponse)(nil),         // 2: businessServiceOrder.GetBusinessServiceOrderResponse
	(*GetBusinessServiceOrdersRequest)(nil),         // 3: businessServiceOrder.GetBusinessServiceOrdersRequest
	(*GetBusinessServiceOrdersResponse)(nil),        // 4: businessServiceOrder.GetBusinessServiceOrdersResponse
	(*GetBusinessServiceOrderByDateRequest)(nil),    // 5: businessServiceOrder.GetBusinessServiceOrderByDateRequest
	(*GetBusinessServiceOrderByDateResponse)(nil),   // 6: businessServiceOrder.GetBusinessServiceOrderByDateResponse
	(*CreateBusinessServiceOrderRequest)(nil),       // 7: businessServiceOrder.CreateBusinessServiceOrderRequest
	(*CreateBusinessServiceOrderResponse)(nil),      // 8: businessServiceOrder.CreateBusinessServiceOrderResponse
	(*GetCompanyServiceInfoByWeekDayRequest)(nil),   // 9: businessServiceOrder.GetCompanyServiceInfoByWeekDayRequest
	(*GetCompanyServiceInfoByWeekDayResponse)(nil),  // 10: businessServiceOrder.GetCompanyServiceInfoByWeekDayResponse
	(*GetCompanyAvailableHoursByDateRequest)(nil),   // 11: businessServiceOrder.GetCompanyAvailableHoursByDateRequest
	(*GetCompanyAvailableHoursByDateResponse)(nil),  // 12: businessServiceOrder.GetCompanyAvailableHoursByDateResponse
	(*UpdateBusinessServiceOrderRequest)(nil),       // 13: businessServiceOrder.UpdateBusinessServiceOrderRequest
	(*UpdateBusinessServiceOrderResponse)(nil),      // 14: businessServiceOrder.UpdateBusinessServiceOrderResponse
	(*DeleteBusinessServiceOrderRequest)(nil),       // 15: businessServiceOrder.DeleteBusinessServiceOrderRequest
	(*DeleteBusinessServiceOrderResponse)(nil),      // 16: businessServiceOrder.DeleteBusinessServiceOrderResponse
	(*Pagination)(nil),                              // 17: businessServiceOrder.Pagination
	(*GetBusinessServiceOrdersByEmailRequest)(nil),  // 18: businessServiceOrder.GetBusinessServiceOrdersByEmailRequest
	(*GetBusinessServiceOrdersByEmailResponse)(nil), // 19: businessServiceOrder.GetBusinessServiceOrdersByEmailResponse
}
var file_order_proto_depIdxs = []int32{
	0,  // 0: businessServiceOrder.GetBusinessServiceOrderResponse.businessServiceOrder:type_name -> businessServiceOrder.BusinessServiceOrder
	0,  // 1: businessServiceOrder.GetBusinessServiceOrdersResponse.businessServicesOrders:type_name -> businessServiceOrder.BusinessServiceOrder
	0,  // 2: businessServiceOrder.GetBusinessServiceOrderByDateResponse.businessServicesOrders:type_name -> businessServiceOrder.BusinessServiceOrder
	0,  // 3: businessServiceOrder.CreateBusinessServiceOrderResponse.businessServiceOrder:type_name -> businessServiceOrder.BusinessServiceOrder
	0,  // 4: businessServiceOrder.UpdateBusinessServiceOrderResponse.businessServiceOrder:type_name -> businessServiceOrder.BusinessServiceOrder
	0,  // 5: businessServiceOrder.DeleteBusinessServiceOrderResponse.businessServiceOrder:type_name -> businessServiceOrder.BusinessServiceOrder
	17, // 6: businessServiceOrder.GetBusinessServiceOrdersByEmailRequest.pagination:type_name -> businessServiceOrder.Pagination
	0,  // 7: businessServiceOrder.GetBusinessServiceOrdersByEmailResponse.businessServicesOrders:type_name -> businessServiceOrder.BusinessServiceOrder
	17, // 8: businessServiceOrder.GetBusinessServiceOrdersByEmailResponse.pagination:type_name -> businessServiceOrder.Pagination
	1,  // 9: businessServiceOrder.BusinessServiceOrders.GetBusinessServiceOrder:input_type -> businessServiceOrder.GetBusinessServiceOrderRequest
	3,  // 10: businessServiceOrder.BusinessServiceOrders.GetBusinessServiceOrders:input_type -> businessServiceOrder.GetBusinessServiceOrdersRequest
	5,  // 11: businessServiceOrder.BusinessServiceOrders.GetBusinessServiceOrderByDate:input_type -> businessServiceOrder.GetBusinessServiceOrderByDateRequest
	18, // 12: businessServiceOrder.BusinessServiceOrders.GetBusinessServiceOrdersByEmail:input_type -> businessServiceOrder.GetBusinessServiceOrdersByEmailRequest
	9,  // 13: businessServiceOrder.BusinessServiceOrders.GetCompanyServiceInfoByWeekDay:input_type -> businessServiceOrder.GetCompanyServiceInfoByWeekDayRequest
	11, // 14: businessServiceOrder.BusinessServiceOrders.GetCompanyAvailableHoursByDate:input_type -> businessServiceOrder.GetCompanyAvailableHoursByDateRequest
	7,  // 15: businessServiceOrder.BusinessServiceOrders.CreateBusinessServiceOrder:input_type -> businessServiceOrder.CreateBusinessServiceOrderRequest
	13, // 16: businessServiceOrder.BusinessServiceOrders.UpdateBusinessServiceOrder:input_type -> businessServiceOrder.UpdateBusinessServiceOrderRequest
	15, // 17: businessServiceOrder.BusinessServiceOrders.DeleteBusinessServiceOrder:input_type -> businessServiceOrder.DeleteBusinessServiceOrderRequest
	2,  // 18: businessServiceOrder.BusinessServiceOrders.GetBusinessServiceOrder:output_type -> businessServiceOrder.GetBusinessServiceOrderResponse
	4,  // 19: businessServiceOrder.BusinessServiceOrders.GetBusinessServiceOrders:output_type -> businessServiceOrder.GetBusinessServiceOrdersResponse
	6,  // 20: businessServiceOrder.BusinessServiceOrders.GetBusinessServiceOrderByDate:output_type -> businessServiceOrder.GetBusinessServiceOrderByDateResponse
	19, // 21: businessServiceOrder.BusinessServiceOrders.GetBusinessServiceOrdersByEmail:output_type -> businessServiceOrder.GetBusinessServiceOrdersByEmailResponse
	10, // 22: businessServiceOrder.BusinessServiceOrders.GetCompanyServiceInfoByWeekDay:output_type -> businessServiceOrder.GetCompanyServiceInfoByWeekDayResponse
	12, // 23: businessServiceOrder.BusinessServiceOrders.GetCompanyAvailableHoursByDate:output_type -> businessServiceOrder.GetCompanyAvailableHoursByDateResponse
	8,  // 24: businessServiceOrder.BusinessServiceOrders.CreateBusinessServiceOrder:output_type -> businessServiceOrder.CreateBusinessServiceOrderResponse
	14, // 25: businessServiceOrder.BusinessServiceOrders.UpdateBusinessServiceOrder:output_type -> businessServiceOrder.UpdateBusinessServiceOrderResponse
	16, // 26: businessServiceOrder.BusinessServiceOrders.DeleteBusinessServiceOrder:output_type -> businessServiceOrder.DeleteBusinessServiceOrderResponse
	18, // [18:27] is the sub-list for method output_type
	9,  // [9:18] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_order_proto_init() }
func file_order_proto_init() {
	if File_order_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_order_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BusinessServiceOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBusinessServiceOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBusinessServiceOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBusinessServiceOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBusinessServiceOrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBusinessServiceOrderByDateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBusinessServiceOrderByDateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBusinessServiceOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBusinessServiceOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyServiceInfoByWeekDayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyServiceInfoByWeekDayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyAvailableHoursByDateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyAvailableHoursByDateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBusinessServiceOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBusinessServiceOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBusinessServiceOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBusinessServiceOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBusinessServiceOrdersByEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBusinessServiceOrdersByEmailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_order_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_order_proto_goTypes,
		DependencyIndexes: file_order_proto_depIdxs,
		MessageInfos:      file_order_proto_msgTypes,
	}.Build()
	File_order_proto = out.File
	file_order_proto_rawDesc = nil
	file_order_proto_goTypes = nil
	file_order_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BusinessServiceOrdersClient is the client API for BusinessServiceOrders service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BusinessServiceOrdersClient interface {
	GetBusinessServiceOrder(ctx context.Context, in *GetBusinessServiceOrderRequest, opts ...grpc.CallOption) (*GetBusinessServiceOrderResponse, error)
	GetBusinessServiceOrders(ctx context.Context, in *GetBusinessServiceOrdersRequest, opts ...grpc.CallOption) (*GetBusinessServiceOrdersResponse, error)
	GetBusinessServiceOrderByDate(ctx context.Context, in *GetBusinessServiceOrderByDateRequest, opts ...grpc.CallOption) (*GetBusinessServiceOrderByDateResponse, error)
	GetBusinessServiceOrdersByEmail(ctx context.Context, in *GetBusinessServiceOrdersByEmailRequest, opts ...grpc.CallOption) (*GetBusinessServiceOrdersByEmailResponse, error)
	GetCompanyServiceInfoByWeekDay(ctx context.Context, in *GetCompanyServiceInfoByWeekDayRequest, opts ...grpc.CallOption) (*GetCompanyServiceInfoByWeekDayResponse, error)
	GetCompanyAvailableHoursByDate(ctx context.Context, in *GetCompanyAvailableHoursByDateRequest, opts ...grpc.CallOption) (*GetCompanyAvailableHoursByDateResponse, error)
	CreateBusinessServiceOrder(ctx context.Context, in *CreateBusinessServiceOrderRequest, opts ...grpc.CallOption) (*CreateBusinessServiceOrderResponse, error)
	UpdateBusinessServiceOrder(ctx context.Context, in *UpdateBusinessServiceOrderRequest, opts ...grpc.CallOption) (*UpdateBusinessServiceOrderResponse, error)
	DeleteBusinessServiceOrder(ctx context.Context, in *DeleteBusinessServiceOrderRequest, opts ...grpc.CallOption) (*DeleteBusinessServiceOrderResponse, error)
}

type businessServiceOrdersClient struct {
	cc grpc.ClientConnInterface
}

func NewBusinessServiceOrdersClient(cc grpc.ClientConnInterface) BusinessServiceOrdersClient {
	return &businessServiceOrdersClient{cc}
}

func (c *businessServiceOrdersClient) GetBusinessServiceOrder(ctx context.Context, in *GetBusinessServiceOrderRequest, opts ...grpc.CallOption) (*GetBusinessServiceOrderResponse, error) {
	out := new(GetBusinessServiceOrderResponse)
	err := c.cc.Invoke(ctx, "/businessServiceOrder.BusinessServiceOrders/GetBusinessServiceOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *businessServiceOrdersClient) GetBusinessServiceOrders(ctx context.Context, in *GetBusinessServiceOrdersRequest, opts ...grpc.CallOption) (*GetBusinessServiceOrdersResponse, error) {
	out := new(GetBusinessServiceOrdersResponse)
	err := c.cc.Invoke(ctx, "/businessServiceOrder.BusinessServiceOrders/GetBusinessServiceOrders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *businessServiceOrdersClient) GetBusinessServiceOrderByDate(ctx context.Context, in *GetBusinessServiceOrderByDateRequest, opts ...grpc.CallOption) (*GetBusinessServiceOrderByDateResponse, error) {
	out := new(GetBusinessServiceOrderByDateResponse)
	err := c.cc.Invoke(ctx, "/businessServiceOrder.BusinessServiceOrders/GetBusinessServiceOrderByDate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *businessServiceOrdersClient) GetBusinessServiceOrdersByEmail(ctx context.Context, in *GetBusinessServiceOrdersByEmailRequest, opts ...grpc.CallOption) (*GetBusinessServiceOrdersByEmailResponse, error) {
	out := new(GetBusinessServiceOrdersByEmailResponse)
	err := c.cc.Invoke(ctx, "/businessServiceOrder.BusinessServiceOrders/GetBusinessServiceOrdersByEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *businessServiceOrdersClient) GetCompanyServiceInfoByWeekDay(ctx context.Context, in *GetCompanyServiceInfoByWeekDayRequest, opts ...grpc.CallOption) (*GetCompanyServiceInfoByWeekDayResponse, error) {
	out := new(GetCompanyServiceInfoByWeekDayResponse)
	err := c.cc.Invoke(ctx, "/businessServiceOrder.BusinessServiceOrders/GetCompanyServiceInfoByWeekDay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *businessServiceOrdersClient) GetCompanyAvailableHoursByDate(ctx context.Context, in *GetCompanyAvailableHoursByDateRequest, opts ...grpc.CallOption) (*GetCompanyAvailableHoursByDateResponse, error) {
	out := new(GetCompanyAvailableHoursByDateResponse)
	err := c.cc.Invoke(ctx, "/businessServiceOrder.BusinessServiceOrders/GetCompanyAvailableHoursByDate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *businessServiceOrdersClient) CreateBusinessServiceOrder(ctx context.Context, in *CreateBusinessServiceOrderRequest, opts ...grpc.CallOption) (*CreateBusinessServiceOrderResponse, error) {
	out := new(CreateBusinessServiceOrderResponse)
	err := c.cc.Invoke(ctx, "/businessServiceOrder.BusinessServiceOrders/CreateBusinessServiceOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *businessServiceOrdersClient) UpdateBusinessServiceOrder(ctx context.Context, in *UpdateBusinessServiceOrderRequest, opts ...grpc.CallOption) (*UpdateBusinessServiceOrderResponse, error) {
	out := new(UpdateBusinessServiceOrderResponse)
	err := c.cc.Invoke(ctx, "/businessServiceOrder.BusinessServiceOrders/UpdateBusinessServiceOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *businessServiceOrdersClient) DeleteBusinessServiceOrder(ctx context.Context, in *DeleteBusinessServiceOrderRequest, opts ...grpc.CallOption) (*DeleteBusinessServiceOrderResponse, error) {
	out := new(DeleteBusinessServiceOrderResponse)
	err := c.cc.Invoke(ctx, "/businessServiceOrder.BusinessServiceOrders/DeleteBusinessServiceOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BusinessServiceOrdersServer is the server API for BusinessServiceOrders service.
type BusinessServiceOrdersServer interface {
	GetBusinessServiceOrder(context.Context, *GetBusinessServiceOrderRequest) (*GetBusinessServiceOrderResponse, error)
	GetBusinessServiceOrders(context.Context, *GetBusinessServiceOrdersRequest) (*GetBusinessServiceOrdersResponse, error)
	GetBusinessServiceOrderByDate(context.Context, *GetBusinessServiceOrderByDateRequest) (*GetBusinessServiceOrderByDateResponse, error)
	GetBusinessServiceOrdersByEmail(context.Context, *GetBusinessServiceOrdersByEmailRequest) (*GetBusinessServiceOrdersByEmailResponse, error)
	GetCompanyServiceInfoByWeekDay(context.Context, *GetCompanyServiceInfoByWeekDayRequest) (*GetCompanyServiceInfoByWeekDayResponse, error)
	GetCompanyAvailableHoursByDate(context.Context, *GetCompanyAvailableHoursByDateRequest) (*GetCompanyAvailableHoursByDateResponse, error)
	CreateBusinessServiceOrder(context.Context, *CreateBusinessServiceOrderRequest) (*CreateBusinessServiceOrderResponse, error)
	UpdateBusinessServiceOrder(context.Context, *UpdateBusinessServiceOrderRequest) (*UpdateBusinessServiceOrderResponse, error)
	DeleteBusinessServiceOrder(context.Context, *DeleteBusinessServiceOrderRequest) (*DeleteBusinessServiceOrderResponse, error)
}

// UnimplementedBusinessServiceOrdersServer can be embedded to have forward compatible implementations.
type UnimplementedBusinessServiceOrdersServer struct {
}

func (*UnimplementedBusinessServiceOrdersServer) GetBusinessServiceOrder(context.Context, *GetBusinessServiceOrderRequest) (*GetBusinessServiceOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBusinessServiceOrder not implemented")
}
func (*UnimplementedBusinessServiceOrdersServer) GetBusinessServiceOrders(context.Context, *GetBusinessServiceOrdersRequest) (*GetBusinessServiceOrdersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBusinessServiceOrders not implemented")
}
func (*UnimplementedBusinessServiceOrdersServer) GetBusinessServiceOrderByDate(context.Context, *GetBusinessServiceOrderByDateRequest) (*GetBusinessServiceOrderByDateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBusinessServiceOrderByDate not implemented")
}
func (*UnimplementedBusinessServiceOrdersServer) GetBusinessServiceOrdersByEmail(context.Context, *GetBusinessServiceOrdersByEmailRequest) (*GetBusinessServiceOrdersByEmailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBusinessServiceOrdersByEmail not implemented")
}
func (*UnimplementedBusinessServiceOrdersServer) GetCompanyServiceInfoByWeekDay(context.Context, *GetCompanyServiceInfoByWeekDayRequest) (*GetCompanyServiceInfoByWeekDayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCompanyServiceInfoByWeekDay not implemented")
}
func (*UnimplementedBusinessServiceOrdersServer) GetCompanyAvailableHoursByDate(context.Context, *GetCompanyAvailableHoursByDateRequest) (*GetCompanyAvailableHoursByDateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCompanyAvailableHoursByDate not implemented")
}
func (*UnimplementedBusinessServiceOrdersServer) CreateBusinessServiceOrder(context.Context, *CreateBusinessServiceOrderRequest) (*CreateBusinessServiceOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBusinessServiceOrder not implemented")
}
func (*UnimplementedBusinessServiceOrdersServer) UpdateBusinessServiceOrder(context.Context, *UpdateBusinessServiceOrderRequest) (*UpdateBusinessServiceOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBusinessServiceOrder not implemented")
}
func (*UnimplementedBusinessServiceOrdersServer) DeleteBusinessServiceOrder(context.Context, *DeleteBusinessServiceOrderRequest) (*DeleteBusinessServiceOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBusinessServiceOrder not implemented")
}

func RegisterBusinessServiceOrdersServer(s *grpc.Server, srv BusinessServiceOrdersServer) {
	s.RegisterService(&_BusinessServiceOrders_serviceDesc, srv)
}

func _BusinessServiceOrders_GetBusinessServiceOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBusinessServiceOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusinessServiceOrdersServer).GetBusinessServiceOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/businessServiceOrder.BusinessServiceOrders/GetBusinessServiceOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusinessServiceOrdersServer).GetBusinessServiceOrder(ctx, req.(*GetBusinessServiceOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BusinessServiceOrders_GetBusinessServiceOrders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBusinessServiceOrdersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusinessServiceOrdersServer).GetBusinessServiceOrders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/businessServiceOrder.BusinessServiceOrders/GetBusinessServiceOrders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusinessServiceOrdersServer).GetBusinessServiceOrders(ctx, req.(*GetBusinessServiceOrdersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BusinessServiceOrders_GetBusinessServiceOrderByDate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBusinessServiceOrderByDateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusinessServiceOrdersServer).GetBusinessServiceOrderByDate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/businessServiceOrder.BusinessServiceOrders/GetBusinessServiceOrderByDate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusinessServiceOrdersServer).GetBusinessServiceOrderByDate(ctx, req.(*GetBusinessServiceOrderByDateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BusinessServiceOrders_GetBusinessServiceOrdersByEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBusinessServiceOrdersByEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusinessServiceOrdersServer).GetBusinessServiceOrdersByEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/businessServiceOrder.BusinessServiceOrders/GetBusinessServiceOrdersByEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusinessServiceOrdersServer).GetBusinessServiceOrdersByEmail(ctx, req.(*GetBusinessServiceOrdersByEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BusinessServiceOrders_GetCompanyServiceInfoByWeekDay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCompanyServiceInfoByWeekDayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusinessServiceOrdersServer).GetCompanyServiceInfoByWeekDay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/businessServiceOrder.BusinessServiceOrders/GetCompanyServiceInfoByWeekDay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusinessServiceOrdersServer).GetCompanyServiceInfoByWeekDay(ctx, req.(*GetCompanyServiceInfoByWeekDayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BusinessServiceOrders_GetCompanyAvailableHoursByDate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCompanyAvailableHoursByDateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusinessServiceOrdersServer).GetCompanyAvailableHoursByDate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/businessServiceOrder.BusinessServiceOrders/GetCompanyAvailableHoursByDate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusinessServiceOrdersServer).GetCompanyAvailableHoursByDate(ctx, req.(*GetCompanyAvailableHoursByDateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BusinessServiceOrders_CreateBusinessServiceOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBusinessServiceOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusinessServiceOrdersServer).CreateBusinessServiceOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/businessServiceOrder.BusinessServiceOrders/CreateBusinessServiceOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusinessServiceOrdersServer).CreateBusinessServiceOrder(ctx, req.(*CreateBusinessServiceOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BusinessServiceOrders_UpdateBusinessServiceOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBusinessServiceOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusinessServiceOrdersServer).UpdateBusinessServiceOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/businessServiceOrder.BusinessServiceOrders/UpdateBusinessServiceOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusinessServiceOrdersServer).UpdateBusinessServiceOrder(ctx, req.(*UpdateBusinessServiceOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BusinessServiceOrders_DeleteBusinessServiceOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBusinessServiceOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusinessServiceOrdersServer).DeleteBusinessServiceOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/businessServiceOrder.BusinessServiceOrders/DeleteBusinessServiceOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusinessServiceOrdersServer).DeleteBusinessServiceOrder(ctx, req.(*DeleteBusinessServiceOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BusinessServiceOrders_serviceDesc = grpc.ServiceDesc{
	ServiceName: "businessServiceOrder.BusinessServiceOrders",
	HandlerType: (*BusinessServiceOrdersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBusinessServiceOrder",
			Handler:    _BusinessServiceOrders_GetBusinessServiceOrder_Handler,
		},
		{
			MethodName: "GetBusinessServiceOrders",
			Handler:    _BusinessServiceOrders_GetBusinessServiceOrders_Handler,
		},
		{
			MethodName: "GetBusinessServiceOrderByDate",
			Handler:    _BusinessServiceOrders_GetBusinessServiceOrderByDate_Handler,
		},
		{
			MethodName: "GetBusinessServiceOrdersByEmail",
			Handler:    _BusinessServiceOrders_GetBusinessServiceOrdersByEmail_Handler,
		},
		{
			MethodName: "GetCompanyServiceInfoByWeekDay",
			Handler:    _BusinessServiceOrders_GetCompanyServiceInfoByWeekDay_Handler,
		},
		{
			MethodName: "GetCompanyAvailableHoursByDate",
			Handler:    _BusinessServiceOrders_GetCompanyAvailableHoursByDate_Handler,
		},
		{
			MethodName: "CreateBusinessServiceOrder",
			Handler:    _BusinessServiceOrders_CreateBusinessServiceOrder_Handler,
		},
		{
			MethodName: "UpdateBusinessServiceOrder",
			Handler:    _BusinessServiceOrders_UpdateBusinessServiceOrder_Handler,
		},
		{
			MethodName: "DeleteBusinessServiceOrder",
			Handler:    _BusinessServiceOrders_DeleteBusinessServiceOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "order.proto",
}
