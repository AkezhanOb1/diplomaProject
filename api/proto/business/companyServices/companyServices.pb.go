// Code generated by protoc-gen-go. DO NOT EDIT.
// source: companyServices.proto

package companyServices

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CompanyService struct {
	CompanyServiceID       int64    `protobuf:"varint,1,opt,name=companyServiceID,proto3" json:"companyServiceID,omitempty"`
	CompanyServiceName     string   `protobuf:"bytes,2,opt,name=companyServiceName,proto3" json:"companyServiceName,omitempty"`
	CompanyServiceDuration int64    `protobuf:"varint,3,opt,name=companyServiceDuration,proto3" json:"companyServiceDuration,omitempty"`
	CompanyServicePrice    float64  `protobuf:"fixed64,4,opt,name=companyServicePrice,proto3" json:"companyServicePrice,omitempty"`
	BusinessServiceID      int64    `protobuf:"varint,5,opt,name=businessServiceID,proto3" json:"businessServiceID,omitempty"`
	BusinessServiceName    string   `protobuf:"bytes,6,opt,name=businessServiceName,proto3" json:"businessServiceName,omitempty"`
	BusinessCompanyID      int64    `protobuf:"varint,7,opt,name=businessCompanyID,proto3" json:"businessCompanyID,omitempty"`
	BusinessCompanyName    string   `protobuf:"bytes,8,opt,name=businessCompanyName,proto3" json:"businessCompanyName,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *CompanyService) Reset()         { *m = CompanyService{} }
func (m *CompanyService) String() string { return proto.CompactTextString(m) }
func (*CompanyService) ProtoMessage()    {}
func (*CompanyService) Descriptor() ([]byte, []int) {
	return fileDescriptor_d279f2e4a91c167c, []int{0}
}

func (m *CompanyService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompanyService.Unmarshal(m, b)
}
func (m *CompanyService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompanyService.Marshal(b, m, deterministic)
}
func (m *CompanyService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompanyService.Merge(m, src)
}
func (m *CompanyService) XXX_Size() int {
	return xxx_messageInfo_CompanyService.Size(m)
}
func (m *CompanyService) XXX_DiscardUnknown() {
	xxx_messageInfo_CompanyService.DiscardUnknown(m)
}

var xxx_messageInfo_CompanyService proto.InternalMessageInfo

func (m *CompanyService) GetCompanyServiceID() int64 {
	if m != nil {
		return m.CompanyServiceID
	}
	return 0
}

func (m *CompanyService) GetCompanyServiceName() string {
	if m != nil {
		return m.CompanyServiceName
	}
	return ""
}

func (m *CompanyService) GetCompanyServiceDuration() int64 {
	if m != nil {
		return m.CompanyServiceDuration
	}
	return 0
}

func (m *CompanyService) GetCompanyServicePrice() float64 {
	if m != nil {
		return m.CompanyServicePrice
	}
	return 0
}

func (m *CompanyService) GetBusinessServiceID() int64 {
	if m != nil {
		return m.BusinessServiceID
	}
	return 0
}

func (m *CompanyService) GetBusinessServiceName() string {
	if m != nil {
		return m.BusinessServiceName
	}
	return ""
}

func (m *CompanyService) GetBusinessCompanyID() int64 {
	if m != nil {
		return m.BusinessCompanyID
	}
	return 0
}

func (m *CompanyService) GetBusinessCompanyName() string {
	if m != nil {
		return m.BusinessCompanyName
	}
	return ""
}

type GetCompanyServiceRequest struct {
	CompanyServiceID     int64    `protobuf:"varint,1,opt,name=companyServiceID,proto3" json:"companyServiceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCompanyServiceRequest) Reset()         { *m = GetCompanyServiceRequest{} }
func (m *GetCompanyServiceRequest) String() string { return proto.CompactTextString(m) }
func (*GetCompanyServiceRequest) ProtoMessage()    {}
func (*GetCompanyServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d279f2e4a91c167c, []int{1}
}

func (m *GetCompanyServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCompanyServiceRequest.Unmarshal(m, b)
}
func (m *GetCompanyServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCompanyServiceRequest.Marshal(b, m, deterministic)
}
func (m *GetCompanyServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCompanyServiceRequest.Merge(m, src)
}
func (m *GetCompanyServiceRequest) XXX_Size() int {
	return xxx_messageInfo_GetCompanyServiceRequest.Size(m)
}
func (m *GetCompanyServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCompanyServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCompanyServiceRequest proto.InternalMessageInfo

func (m *GetCompanyServiceRequest) GetCompanyServiceID() int64 {
	if m != nil {
		return m.CompanyServiceID
	}
	return 0
}

type GetCompanyServiceResponse struct {
	CompanyService       *CompanyService `protobuf:"bytes,1,opt,name=companyService,proto3" json:"companyService,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetCompanyServiceResponse) Reset()         { *m = GetCompanyServiceResponse{} }
func (m *GetCompanyServiceResponse) String() string { return proto.CompactTextString(m) }
func (*GetCompanyServiceResponse) ProtoMessage()    {}
func (*GetCompanyServiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d279f2e4a91c167c, []int{2}
}

func (m *GetCompanyServiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCompanyServiceResponse.Unmarshal(m, b)
}
func (m *GetCompanyServiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCompanyServiceResponse.Marshal(b, m, deterministic)
}
func (m *GetCompanyServiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCompanyServiceResponse.Merge(m, src)
}
func (m *GetCompanyServiceResponse) XXX_Size() int {
	return xxx_messageInfo_GetCompanyServiceResponse.Size(m)
}
func (m *GetCompanyServiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCompanyServiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCompanyServiceResponse proto.InternalMessageInfo

func (m *GetCompanyServiceResponse) GetCompanyService() *CompanyService {
	if m != nil {
		return m.CompanyService
	}
	return nil
}

type GetCompanyServicesResponse struct {
	CompanyServices      []*CompanyService `protobuf:"bytes,1,rep,name=companyServices,proto3" json:"companyServices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetCompanyServicesResponse) Reset()         { *m = GetCompanyServicesResponse{} }
func (m *GetCompanyServicesResponse) String() string { return proto.CompactTextString(m) }
func (*GetCompanyServicesResponse) ProtoMessage()    {}
func (*GetCompanyServicesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d279f2e4a91c167c, []int{3}
}

func (m *GetCompanyServicesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCompanyServicesResponse.Unmarshal(m, b)
}
func (m *GetCompanyServicesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCompanyServicesResponse.Marshal(b, m, deterministic)
}
func (m *GetCompanyServicesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCompanyServicesResponse.Merge(m, src)
}
func (m *GetCompanyServicesResponse) XXX_Size() int {
	return xxx_messageInfo_GetCompanyServicesResponse.Size(m)
}
func (m *GetCompanyServicesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCompanyServicesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCompanyServicesResponse proto.InternalMessageInfo

func (m *GetCompanyServicesResponse) GetCompanyServices() []*CompanyService {
	if m != nil {
		return m.CompanyServices
	}
	return nil
}

type CreateCompanyServiceRequest struct {
	CompanyServiceName     string   `protobuf:"bytes,1,opt,name=companyServiceName,proto3" json:"companyServiceName,omitempty"`
	CompanyServiceDuration int64    `protobuf:"varint,2,opt,name=companyServiceDuration,proto3" json:"companyServiceDuration,omitempty"`
	CompanyServicePrice    float64  `protobuf:"fixed64,3,opt,name=companyServicePrice,proto3" json:"companyServicePrice,omitempty"`
	BusinessServiceID      int64    `protobuf:"varint,4,opt,name=businessServiceID,proto3" json:"businessServiceID,omitempty"`
	BusinessCompanyID      int64    `protobuf:"varint,5,opt,name=businessCompanyID,proto3" json:"businessCompanyID,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *CreateCompanyServiceRequest) Reset()         { *m = CreateCompanyServiceRequest{} }
func (m *CreateCompanyServiceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCompanyServiceRequest) ProtoMessage()    {}
func (*CreateCompanyServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d279f2e4a91c167c, []int{4}
}

func (m *CreateCompanyServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCompanyServiceRequest.Unmarshal(m, b)
}
func (m *CreateCompanyServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCompanyServiceRequest.Marshal(b, m, deterministic)
}
func (m *CreateCompanyServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCompanyServiceRequest.Merge(m, src)
}
func (m *CreateCompanyServiceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCompanyServiceRequest.Size(m)
}
func (m *CreateCompanyServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCompanyServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCompanyServiceRequest proto.InternalMessageInfo

func (m *CreateCompanyServiceRequest) GetCompanyServiceName() string {
	if m != nil {
		return m.CompanyServiceName
	}
	return ""
}

func (m *CreateCompanyServiceRequest) GetCompanyServiceDuration() int64 {
	if m != nil {
		return m.CompanyServiceDuration
	}
	return 0
}

func (m *CreateCompanyServiceRequest) GetCompanyServicePrice() float64 {
	if m != nil {
		return m.CompanyServicePrice
	}
	return 0
}

func (m *CreateCompanyServiceRequest) GetBusinessServiceID() int64 {
	if m != nil {
		return m.BusinessServiceID
	}
	return 0
}

func (m *CreateCompanyServiceRequest) GetBusinessCompanyID() int64 {
	if m != nil {
		return m.BusinessCompanyID
	}
	return 0
}

type CreateCompanyServiceResponse struct {
	CompanyService       *CompanyService `protobuf:"bytes,1,opt,name=companyService,proto3" json:"companyService,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CreateCompanyServiceResponse) Reset()         { *m = CreateCompanyServiceResponse{} }
func (m *CreateCompanyServiceResponse) String() string { return proto.CompactTextString(m) }
func (*CreateCompanyServiceResponse) ProtoMessage()    {}
func (*CreateCompanyServiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d279f2e4a91c167c, []int{5}
}

func (m *CreateCompanyServiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCompanyServiceResponse.Unmarshal(m, b)
}
func (m *CreateCompanyServiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCompanyServiceResponse.Marshal(b, m, deterministic)
}
func (m *CreateCompanyServiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCompanyServiceResponse.Merge(m, src)
}
func (m *CreateCompanyServiceResponse) XXX_Size() int {
	return xxx_messageInfo_CreateCompanyServiceResponse.Size(m)
}
func (m *CreateCompanyServiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCompanyServiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCompanyServiceResponse proto.InternalMessageInfo

func (m *CreateCompanyServiceResponse) GetCompanyService() *CompanyService {
	if m != nil {
		return m.CompanyService
	}
	return nil
}

type UpdateCompanyServiceRequest struct {
	CompanyServiceID       int64    `protobuf:"varint,1,opt,name=companyServiceID,proto3" json:"companyServiceID,omitempty"`
	CompanyServiceName     string   `protobuf:"bytes,2,opt,name=companyServiceName,proto3" json:"companyServiceName,omitempty"`
	CompanyServiceDuration int64    `protobuf:"varint,3,opt,name=companyServiceDuration,proto3" json:"companyServiceDuration,omitempty"`
	CompanyServicePrice    float64  `protobuf:"fixed64,4,opt,name=companyServicePrice,proto3" json:"companyServicePrice,omitempty"`
	BusinessServiceID      int64    `protobuf:"varint,5,opt,name=businessServiceID,proto3" json:"businessServiceID,omitempty"`
	BusinessCompanyID      int64    `protobuf:"varint,6,opt,name=businessCompanyID,proto3" json:"businessCompanyID,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *UpdateCompanyServiceRequest) Reset()         { *m = UpdateCompanyServiceRequest{} }
func (m *UpdateCompanyServiceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateCompanyServiceRequest) ProtoMessage()    {}
func (*UpdateCompanyServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d279f2e4a91c167c, []int{6}
}

func (m *UpdateCompanyServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCompanyServiceRequest.Unmarshal(m, b)
}
func (m *UpdateCompanyServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCompanyServiceRequest.Marshal(b, m, deterministic)
}
func (m *UpdateCompanyServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCompanyServiceRequest.Merge(m, src)
}
func (m *UpdateCompanyServiceRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateCompanyServiceRequest.Size(m)
}
func (m *UpdateCompanyServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCompanyServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCompanyServiceRequest proto.InternalMessageInfo

func (m *UpdateCompanyServiceRequest) GetCompanyServiceID() int64 {
	if m != nil {
		return m.CompanyServiceID
	}
	return 0
}

func (m *UpdateCompanyServiceRequest) GetCompanyServiceName() string {
	if m != nil {
		return m.CompanyServiceName
	}
	return ""
}

func (m *UpdateCompanyServiceRequest) GetCompanyServiceDuration() int64 {
	if m != nil {
		return m.CompanyServiceDuration
	}
	return 0
}

func (m *UpdateCompanyServiceRequest) GetCompanyServicePrice() float64 {
	if m != nil {
		return m.CompanyServicePrice
	}
	return 0
}

func (m *UpdateCompanyServiceRequest) GetBusinessServiceID() int64 {
	if m != nil {
		return m.BusinessServiceID
	}
	return 0
}

func (m *UpdateCompanyServiceRequest) GetBusinessCompanyID() int64 {
	if m != nil {
		return m.BusinessCompanyID
	}
	return 0
}

type UpdateCompanyServiceResponse struct {
	CompanyService       *CompanyService `protobuf:"bytes,1,opt,name=companyService,proto3" json:"companyService,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpdateCompanyServiceResponse) Reset()         { *m = UpdateCompanyServiceResponse{} }
func (m *UpdateCompanyServiceResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateCompanyServiceResponse) ProtoMessage()    {}
func (*UpdateCompanyServiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d279f2e4a91c167c, []int{7}
}

func (m *UpdateCompanyServiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCompanyServiceResponse.Unmarshal(m, b)
}
func (m *UpdateCompanyServiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCompanyServiceResponse.Marshal(b, m, deterministic)
}
func (m *UpdateCompanyServiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCompanyServiceResponse.Merge(m, src)
}
func (m *UpdateCompanyServiceResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateCompanyServiceResponse.Size(m)
}
func (m *UpdateCompanyServiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCompanyServiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCompanyServiceResponse proto.InternalMessageInfo

func (m *UpdateCompanyServiceResponse) GetCompanyService() *CompanyService {
	if m != nil {
		return m.CompanyService
	}
	return nil
}

type DeleteCompanyServiceRequest struct {
	CompanyServiceID     int64    `protobuf:"varint,1,opt,name=companyServiceID,proto3" json:"companyServiceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCompanyServiceRequest) Reset()         { *m = DeleteCompanyServiceRequest{} }
func (m *DeleteCompanyServiceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCompanyServiceRequest) ProtoMessage()    {}
func (*DeleteCompanyServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d279f2e4a91c167c, []int{8}
}

func (m *DeleteCompanyServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCompanyServiceRequest.Unmarshal(m, b)
}
func (m *DeleteCompanyServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCompanyServiceRequest.Marshal(b, m, deterministic)
}
func (m *DeleteCompanyServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCompanyServiceRequest.Merge(m, src)
}
func (m *DeleteCompanyServiceRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCompanyServiceRequest.Size(m)
}
func (m *DeleteCompanyServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCompanyServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCompanyServiceRequest proto.InternalMessageInfo

func (m *DeleteCompanyServiceRequest) GetCompanyServiceID() int64 {
	if m != nil {
		return m.CompanyServiceID
	}
	return 0
}

type DeleteCompanyServiceResponse struct {
	CompanyService       *CompanyService `protobuf:"bytes,1,opt,name=companyService,proto3" json:"companyService,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DeleteCompanyServiceResponse) Reset()         { *m = DeleteCompanyServiceResponse{} }
func (m *DeleteCompanyServiceResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteCompanyServiceResponse) ProtoMessage()    {}
func (*DeleteCompanyServiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d279f2e4a91c167c, []int{9}
}

func (m *DeleteCompanyServiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCompanyServiceResponse.Unmarshal(m, b)
}
func (m *DeleteCompanyServiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCompanyServiceResponse.Marshal(b, m, deterministic)
}
func (m *DeleteCompanyServiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCompanyServiceResponse.Merge(m, src)
}
func (m *DeleteCompanyServiceResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteCompanyServiceResponse.Size(m)
}
func (m *DeleteCompanyServiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCompanyServiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCompanyServiceResponse proto.InternalMessageInfo

func (m *DeleteCompanyServiceResponse) GetCompanyService() *CompanyService {
	if m != nil {
		return m.CompanyService
	}
	return nil
}

type GetCompanyServicesUnderSubCategoryRequest struct {
	SubCategoryID        int64    `protobuf:"varint,1,opt,name=subCategoryID,proto3" json:"subCategoryID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCompanyServicesUnderSubCategoryRequest) Reset() {
	*m = GetCompanyServicesUnderSubCategoryRequest{}
}
func (m *GetCompanyServicesUnderSubCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*GetCompanyServicesUnderSubCategoryRequest) ProtoMessage()    {}
func (*GetCompanyServicesUnderSubCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d279f2e4a91c167c, []int{10}
}

func (m *GetCompanyServicesUnderSubCategoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCompanyServicesUnderSubCategoryRequest.Unmarshal(m, b)
}
func (m *GetCompanyServicesUnderSubCategoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCompanyServicesUnderSubCategoryRequest.Marshal(b, m, deterministic)
}
func (m *GetCompanyServicesUnderSubCategoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCompanyServicesUnderSubCategoryRequest.Merge(m, src)
}
func (m *GetCompanyServicesUnderSubCategoryRequest) XXX_Size() int {
	return xxx_messageInfo_GetCompanyServicesUnderSubCategoryRequest.Size(m)
}
func (m *GetCompanyServicesUnderSubCategoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCompanyServicesUnderSubCategoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCompanyServicesUnderSubCategoryRequest proto.InternalMessageInfo

func (m *GetCompanyServicesUnderSubCategoryRequest) GetSubCategoryID() int64 {
	if m != nil {
		return m.SubCategoryID
	}
	return 0
}

type GetCompanyServicesUnderSubCategoryResponse struct {
	CompanyServices      []*CompanyService `protobuf:"bytes,1,rep,name=companyServices,proto3" json:"companyServices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetCompanyServicesUnderSubCategoryResponse) Reset() {
	*m = GetCompanyServicesUnderSubCategoryResponse{}
}
func (m *GetCompanyServicesUnderSubCategoryResponse) String() string {
	return proto.CompactTextString(m)
}
func (*GetCompanyServicesUnderSubCategoryResponse) ProtoMessage() {}
func (*GetCompanyServicesUnderSubCategoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d279f2e4a91c167c, []int{11}
}

func (m *GetCompanyServicesUnderSubCategoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCompanyServicesUnderSubCategoryResponse.Unmarshal(m, b)
}
func (m *GetCompanyServicesUnderSubCategoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCompanyServicesUnderSubCategoryResponse.Marshal(b, m, deterministic)
}
func (m *GetCompanyServicesUnderSubCategoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCompanyServicesUnderSubCategoryResponse.Merge(m, src)
}
func (m *GetCompanyServicesUnderSubCategoryResponse) XXX_Size() int {
	return xxx_messageInfo_GetCompanyServicesUnderSubCategoryResponse.Size(m)
}
func (m *GetCompanyServicesUnderSubCategoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCompanyServicesUnderSubCategoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCompanyServicesUnderSubCategoryResponse proto.InternalMessageInfo

func (m *GetCompanyServicesUnderSubCategoryResponse) GetCompanyServices() []*CompanyService {
	if m != nil {
		return m.CompanyServices
	}
	return nil
}

func init() {
	proto.RegisterType((*CompanyService)(nil), "companyServices.CompanyService")
	proto.RegisterType((*GetCompanyServiceRequest)(nil), "companyServices.GetCompanyServiceRequest")
	proto.RegisterType((*GetCompanyServiceResponse)(nil), "companyServices.GetCompanyServiceResponse")
	proto.RegisterType((*GetCompanyServicesResponse)(nil), "companyServices.GetCompanyServicesResponse")
	proto.RegisterType((*CreateCompanyServiceRequest)(nil), "companyServices.CreateCompanyServiceRequest")
	proto.RegisterType((*CreateCompanyServiceResponse)(nil), "companyServices.CreateCompanyServiceResponse")
	proto.RegisterType((*UpdateCompanyServiceRequest)(nil), "companyServices.UpdateCompanyServiceRequest")
	proto.RegisterType((*UpdateCompanyServiceResponse)(nil), "companyServices.UpdateCompanyServiceResponse")
	proto.RegisterType((*DeleteCompanyServiceRequest)(nil), "companyServices.DeleteCompanyServiceRequest")
	proto.RegisterType((*DeleteCompanyServiceResponse)(nil), "companyServices.DeleteCompanyServiceResponse")
	proto.RegisterType((*GetCompanyServicesUnderSubCategoryRequest)(nil), "companyServices.GetCompanyServicesUnderSubCategoryRequest")
	proto.RegisterType((*GetCompanyServicesUnderSubCategoryResponse)(nil), "companyServices.GetCompanyServicesUnderSubCategoryResponse")
}

func init() { proto.RegisterFile("companyServices.proto", fileDescriptor_d279f2e4a91c167c) }

var fileDescriptor_d279f2e4a91c167c = []byte{
	// 542 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x56, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xae, 0xe3, 0x26, 0xc0, 0x20, 0x5a, 0xb2, 0x40, 0x65, 0x1c, 0x24, 0xa2, 0x15, 0x87, 0x34,
	0x14, 0x17, 0x15, 0x89, 0x03, 0xdc, 0x48, 0xa0, 0xca, 0x05, 0x41, 0xaa, 0x5e, 0xe0, 0xe4, 0x24,
	0x83, 0x15, 0x29, 0xb1, 0x8d, 0xd7, 0x06, 0xe5, 0x39, 0x90, 0xb8, 0xf2, 0x28, 0x3c, 0x0c, 0x2f,
	0x82, 0xe2, 0x34, 0xa9, 0x77, 0x77, 0xec, 0xba, 0x91, 0x6f, 0xbd, 0xce, 0xec, 0x7c, 0xdf, 0xfc,
	0x7c, 0x33, 0x5a, 0x78, 0x34, 0x0e, 0xe6, 0xa1, 0xeb, 0x2f, 0xce, 0x30, 0xfa, 0x31, 0x1d, 0xa3,
	0x70, 0xc2, 0x28, 0x88, 0x03, 0xb6, 0xaf, 0x98, 0xed, 0x96, 0x17, 0x04, 0xde, 0x0c, 0x8f, 0x53,
	0xf7, 0x28, 0xf9, 0x76, 0x8c, 0xf3, 0x30, 0x5e, 0xac, 0x5e, 0xf3, 0xdf, 0x26, 0xec, 0xf5, 0xa4,
	0x00, 0xd6, 0x85, 0xfb, 0x32, 0xc4, 0xa0, 0x6f, 0x19, 0x6d, 0xa3, 0x63, 0x0e, 0x35, 0x3b, 0x73,
	0x80, 0xc9, 0xb6, 0x8f, 0xee, 0x1c, 0xad, 0x5a, 0xdb, 0xe8, 0xdc, 0x19, 0x12, 0x1e, 0xf6, 0x1a,
	0x0e, 0x64, 0x6b, 0x3f, 0x89, 0xdc, 0x78, 0x1a, 0xf8, 0x96, 0x99, 0x32, 0xe4, 0x78, 0xd9, 0x4b,
	0x78, 0x20, 0x7b, 0x3e, 0x45, 0xd3, 0x31, 0x5a, 0xbb, 0x6d, 0xa3, 0x63, 0x0c, 0x29, 0x17, 0x3b,
	0x82, 0xe6, 0x28, 0x11, 0x53, 0x1f, 0x85, 0xb8, 0x2c, 0xa3, 0x9e, 0x92, 0xe8, 0x8e, 0x25, 0xbe,
	0x62, 0x4c, 0x0b, 0x69, 0xa4, 0x85, 0x50, 0xae, 0x2c, 0xfe, 0x45, 0xff, 0x06, 0x7d, 0xeb, 0x96,
	0x8c, 0xbf, 0x71, 0x64, 0xf1, 0x2f, 0x8c, 0x29, 0xfe, 0x6d, 0x19, 0x3f, 0xe3, 0xe2, 0x1f, 0xc0,
	0x3a, 0xc5, 0x58, 0x1e, 0xcd, 0x10, 0xbf, 0x27, 0x28, 0xe2, 0xeb, 0x4c, 0x88, 0x4f, 0xe0, 0x31,
	0x81, 0x23, 0xc2, 0xc0, 0x17, 0xc8, 0x4e, 0x61, 0x4f, 0x0e, 0x48, 0x61, 0xee, 0x9e, 0x3c, 0x75,
	0x54, 0x6d, 0x29, 0x00, 0x4a, 0x18, 0xf7, 0xc0, 0xd6, 0x58, 0xc4, 0x86, 0x66, 0x00, 0xaa, 0x28,
	0x2d, 0xa3, 0x6d, 0x96, 0xe1, 0x51, 0xe3, 0xf8, 0xaf, 0x1a, 0xb4, 0x7a, 0x11, 0xba, 0x31, 0xd2,
	0xad, 0xa1, 0x05, 0x69, 0x6c, 0x21, 0xc8, 0xda, 0x36, 0x82, 0x34, 0xaf, 0x29, 0xc8, 0xdd, 0x3c,
	0x41, 0x92, 0xf2, 0xaa, 0xe7, 0xc8, 0x8b, 0x7b, 0xf0, 0x84, 0x6e, 0x4a, 0xd5, 0x73, 0xfe, 0x5b,
	0x83, 0xd6, 0x79, 0x38, 0xc9, 0x6d, 0xff, 0x4d, 0xbc, 0x1d, 0xe4, 0xa8, 0x1a, 0x05, 0xa3, 0xa2,
	0x1b, 0x58, 0xf5, 0xa8, 0x06, 0xd0, 0xea, 0xe3, 0x0c, 0x2b, 0x98, 0xd4, 0x32, 0x67, 0x1a, 0xaa,
	0xea, 0x9c, 0x3f, 0xc3, 0xa1, 0x7e, 0x46, 0xce, 0xfd, 0x09, 0x46, 0x67, 0xc9, 0xa8, 0xe7, 0xc6,
	0xe8, 0x05, 0xd1, 0x62, 0x5d, 0xc1, 0x33, 0xb8, 0x27, 0x2e, 0xad, 0x9b, 0xf4, 0x65, 0x23, 0xff,
	0x09, 0xdd, 0x32, 0x90, 0x95, 0x5f, 0xaa, 0x93, 0x7f, 0x75, 0xd8, 0x57, 0x68, 0xd9, 0x0c, 0x9a,
	0x5a, 0x32, 0xec, 0x50, 0x83, 0xce, 0x3b, 0xfc, 0x76, 0xb7, 0xcc, 0xd3, 0x55, 0x29, 0x7c, 0x87,
	0x7d, 0x05, 0xa6, 0x97, 0xce, 0x0e, 0x9c, 0xd5, 0x7f, 0xc0, 0x59, 0xff, 0x07, 0x9c, 0xf7, 0xcb,
	0xff, 0x80, 0xfd, 0xfc, 0x6a, 0x6c, 0x91, 0x01, 0x4f, 0xe0, 0x21, 0x75, 0x72, 0xd8, 0x91, 0xde,
	0xa8, 0xfc, 0x73, 0x6d, 0xbf, 0x28, 0xf9, 0x3a, 0x4b, 0x4b, 0xad, 0x0f, 0x41, 0x5b, 0x70, 0xa6,
	0x08, 0xda, 0xa2, 0x9d, 0x5c, 0xd1, 0x52, 0x1b, 0x40, 0xd0, 0x16, 0xec, 0x1c, 0x41, 0x5b, 0xb4,
	0x56, 0x7c, 0x87, 0xfd, 0x31, 0x80, 0x5f, 0xad, 0x5e, 0xf6, 0xa6, 0xc4, 0xe8, 0x72, 0xb6, 0xc8,
	0x7e, 0xbb, 0x55, 0xec, 0x3a, 0xc3, 0x77, 0xcd, 0x2f, 0xaa, 0xf0, 0x47, 0x8d, 0x54, 0x58, 0xaf,
	0xfe, 0x07, 0x00, 0x00, 0xff, 0xff, 0x6c, 0x7c, 0xad, 0x6d, 0xa0, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CompanyServicesClient is the client API for CompanyServices service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CompanyServicesClient interface {
	GetCompanyService(ctx context.Context, in *GetCompanyServiceRequest, opts ...grpc.CallOption) (*GetCompanyServiceResponse, error)
	GetCompanyServices(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetCompanyServicesResponse, error)
	CreateCompanyService(ctx context.Context, in *CreateCompanyServiceRequest, opts ...grpc.CallOption) (*CreateCompanyServiceResponse, error)
	UpdateCompanyService(ctx context.Context, in *UpdateCompanyServiceRequest, opts ...grpc.CallOption) (*UpdateCompanyServiceResponse, error)
	DeleteCompanyService(ctx context.Context, in *DeleteCompanyServiceRequest, opts ...grpc.CallOption) (*DeleteCompanyServiceResponse, error)
	GetCompanyServicesUnderSubCategory(ctx context.Context, in *GetCompanyServicesUnderSubCategoryRequest, opts ...grpc.CallOption) (*GetCompanyServicesUnderSubCategoryResponse, error)
}

type companyServicesClient struct {
	cc grpc.ClientConnInterface
}

func NewCompanyServicesClient(cc grpc.ClientConnInterface) CompanyServicesClient {
	return &companyServicesClient{cc}
}

func (c *companyServicesClient) GetCompanyService(ctx context.Context, in *GetCompanyServiceRequest, opts ...grpc.CallOption) (*GetCompanyServiceResponse, error) {
	out := new(GetCompanyServiceResponse)
	err := c.cc.Invoke(ctx, "/companyServices.CompanyServices/GetCompanyService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *companyServicesClient) GetCompanyServices(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetCompanyServicesResponse, error) {
	out := new(GetCompanyServicesResponse)
	err := c.cc.Invoke(ctx, "/companyServices.CompanyServices/GetCompanyServices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *companyServicesClient) CreateCompanyService(ctx context.Context, in *CreateCompanyServiceRequest, opts ...grpc.CallOption) (*CreateCompanyServiceResponse, error) {
	out := new(CreateCompanyServiceResponse)
	err := c.cc.Invoke(ctx, "/companyServices.CompanyServices/CreateCompanyService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *companyServicesClient) UpdateCompanyService(ctx context.Context, in *UpdateCompanyServiceRequest, opts ...grpc.CallOption) (*UpdateCompanyServiceResponse, error) {
	out := new(UpdateCompanyServiceResponse)
	err := c.cc.Invoke(ctx, "/companyServices.CompanyServices/UpdateCompanyService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *companyServicesClient) DeleteCompanyService(ctx context.Context, in *DeleteCompanyServiceRequest, opts ...grpc.CallOption) (*DeleteCompanyServiceResponse, error) {
	out := new(DeleteCompanyServiceResponse)
	err := c.cc.Invoke(ctx, "/companyServices.CompanyServices/DeleteCompanyService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *companyServicesClient) GetCompanyServicesUnderSubCategory(ctx context.Context, in *GetCompanyServicesUnderSubCategoryRequest, opts ...grpc.CallOption) (*GetCompanyServicesUnderSubCategoryResponse, error) {
	out := new(GetCompanyServicesUnderSubCategoryResponse)
	err := c.cc.Invoke(ctx, "/companyServices.CompanyServices/GetCompanyServicesUnderSubCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CompanyServicesServer is the server API for CompanyServices service.
type CompanyServicesServer interface {
	GetCompanyService(context.Context, *GetCompanyServiceRequest) (*GetCompanyServiceResponse, error)
	GetCompanyServices(context.Context, *empty.Empty) (*GetCompanyServicesResponse, error)
	CreateCompanyService(context.Context, *CreateCompanyServiceRequest) (*CreateCompanyServiceResponse, error)
	UpdateCompanyService(context.Context, *UpdateCompanyServiceRequest) (*UpdateCompanyServiceResponse, error)
	DeleteCompanyService(context.Context, *DeleteCompanyServiceRequest) (*DeleteCompanyServiceResponse, error)
	GetCompanyServicesUnderSubCategory(context.Context, *GetCompanyServicesUnderSubCategoryRequest) (*GetCompanyServicesUnderSubCategoryResponse, error)
}

// UnimplementedCompanyServicesServer can be embedded to have forward compatible implementations.
type UnimplementedCompanyServicesServer struct {
}

func (*UnimplementedCompanyServicesServer) GetCompanyService(ctx context.Context, req *GetCompanyServiceRequest) (*GetCompanyServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCompanyService not implemented")
}
func (*UnimplementedCompanyServicesServer) GetCompanyServices(ctx context.Context, req *empty.Empty) (*GetCompanyServicesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCompanyServices not implemented")
}
func (*UnimplementedCompanyServicesServer) CreateCompanyService(ctx context.Context, req *CreateCompanyServiceRequest) (*CreateCompanyServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCompanyService not implemented")
}
func (*UnimplementedCompanyServicesServer) UpdateCompanyService(ctx context.Context, req *UpdateCompanyServiceRequest) (*UpdateCompanyServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCompanyService not implemented")
}
func (*UnimplementedCompanyServicesServer) DeleteCompanyService(ctx context.Context, req *DeleteCompanyServiceRequest) (*DeleteCompanyServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCompanyService not implemented")
}
func (*UnimplementedCompanyServicesServer) GetCompanyServicesUnderSubCategory(ctx context.Context, req *GetCompanyServicesUnderSubCategoryRequest) (*GetCompanyServicesUnderSubCategoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCompanyServicesUnderSubCategory not implemented")
}

func RegisterCompanyServicesServer(s *grpc.Server, srv CompanyServicesServer) {
	s.RegisterService(&_CompanyServices_serviceDesc, srv)
}

func _CompanyServices_GetCompanyService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCompanyServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CompanyServicesServer).GetCompanyService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/companyServices.CompanyServices/GetCompanyService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CompanyServicesServer).GetCompanyService(ctx, req.(*GetCompanyServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CompanyServices_GetCompanyServices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CompanyServicesServer).GetCompanyServices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/companyServices.CompanyServices/GetCompanyServices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CompanyServicesServer).GetCompanyServices(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _CompanyServices_CreateCompanyService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCompanyServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CompanyServicesServer).CreateCompanyService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/companyServices.CompanyServices/CreateCompanyService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CompanyServicesServer).CreateCompanyService(ctx, req.(*CreateCompanyServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CompanyServices_UpdateCompanyService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCompanyServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CompanyServicesServer).UpdateCompanyService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/companyServices.CompanyServices/UpdateCompanyService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CompanyServicesServer).UpdateCompanyService(ctx, req.(*UpdateCompanyServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CompanyServices_DeleteCompanyService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCompanyServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CompanyServicesServer).DeleteCompanyService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/companyServices.CompanyServices/DeleteCompanyService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CompanyServicesServer).DeleteCompanyService(ctx, req.(*DeleteCompanyServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CompanyServices_GetCompanyServicesUnderSubCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCompanyServicesUnderSubCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CompanyServicesServer).GetCompanyServicesUnderSubCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/companyServices.CompanyServices/GetCompanyServicesUnderSubCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CompanyServicesServer).GetCompanyServicesUnderSubCategory(ctx, req.(*GetCompanyServicesUnderSubCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CompanyServices_serviceDesc = grpc.ServiceDesc{
	ServiceName: "companyServices.CompanyServices",
	HandlerType: (*CompanyServicesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCompanyService",
			Handler:    _CompanyServices_GetCompanyService_Handler,
		},
		{
			MethodName: "GetCompanyServices",
			Handler:    _CompanyServices_GetCompanyServices_Handler,
		},
		{
			MethodName: "CreateCompanyService",
			Handler:    _CompanyServices_CreateCompanyService_Handler,
		},
		{
			MethodName: "UpdateCompanyService",
			Handler:    _CompanyServices_UpdateCompanyService_Handler,
		},
		{
			MethodName: "DeleteCompanyService",
			Handler:    _CompanyServices_DeleteCompanyService_Handler,
		},
		{
			MethodName: "GetCompanyServicesUnderSubCategory",
			Handler:    _CompanyServices_GetCompanyServicesUnderSubCategory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "companyServices.proto",
}
