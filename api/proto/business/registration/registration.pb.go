// Code generated by protoc-gen-go. DO NOT EDIT.
// source: registration/registration.proto

package businessRegistration

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BusinessCategory struct {
	BusinessCategoryID   int64    `protobuf:"varint,1,opt,name=businessCategoryID,proto3" json:"businessCategoryID,omitempty"`
	BusinessCategoryName string   `protobuf:"bytes,2,opt,name=businessCategoryName,proto3" json:"businessCategoryName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BusinessCategory) Reset()         { *m = BusinessCategory{} }
func (m *BusinessCategory) String() string { return proto.CompactTextString(m) }
func (*BusinessCategory) ProtoMessage()    {}
func (*BusinessCategory) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b3dc13a5b6a765d, []int{0}
}

func (m *BusinessCategory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BusinessCategory.Unmarshal(m, b)
}
func (m *BusinessCategory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BusinessCategory.Marshal(b, m, deterministic)
}
func (m *BusinessCategory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BusinessCategory.Merge(m, src)
}
func (m *BusinessCategory) XXX_Size() int {
	return xxx_messageInfo_BusinessCategory.Size(m)
}
func (m *BusinessCategory) XXX_DiscardUnknown() {
	xxx_messageInfo_BusinessCategory.DiscardUnknown(m)
}

var xxx_messageInfo_BusinessCategory proto.InternalMessageInfo

func (m *BusinessCategory) GetBusinessCategoryID() int64 {
	if m != nil {
		return m.BusinessCategoryID
	}
	return 0
}

func (m *BusinessCategory) GetBusinessCategoryName() string {
	if m != nil {
		return m.BusinessCategoryName
	}
	return ""
}

type BusinessCategories struct {
	BusinessCategories   []*BusinessCategory `protobuf:"bytes,1,rep,name=businessCategories,proto3" json:"businessCategories,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *BusinessCategories) Reset()         { *m = BusinessCategories{} }
func (m *BusinessCategories) String() string { return proto.CompactTextString(m) }
func (*BusinessCategories) ProtoMessage()    {}
func (*BusinessCategories) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b3dc13a5b6a765d, []int{1}
}

func (m *BusinessCategories) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BusinessCategories.Unmarshal(m, b)
}
func (m *BusinessCategories) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BusinessCategories.Marshal(b, m, deterministic)
}
func (m *BusinessCategories) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BusinessCategories.Merge(m, src)
}
func (m *BusinessCategories) XXX_Size() int {
	return xxx_messageInfo_BusinessCategories.Size(m)
}
func (m *BusinessCategories) XXX_DiscardUnknown() {
	xxx_messageInfo_BusinessCategories.DiscardUnknown(m)
}

var xxx_messageInfo_BusinessCategories proto.InternalMessageInfo

func (m *BusinessCategories) GetBusinessCategories() []*BusinessCategory {
	if m != nil {
		return m.BusinessCategories
	}
	return nil
}

func init() {
	proto.RegisterType((*BusinessCategory)(nil), "businessRegistration.BusinessCategory")
	proto.RegisterType((*BusinessCategories)(nil), "businessRegistration.BusinessCategories")
}

func init() { proto.RegisterFile("registration/registration.proto", fileDescriptor_8b3dc13a5b6a765d) }

var fileDescriptor_8b3dc13a5b6a765d = []byte{
	// 218 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2f, 0x4a, 0x4d, 0xcf,
	0x2c, 0x2e, 0x29, 0x4a, 0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x47, 0xe6, 0xe8, 0x15, 0x14, 0xe5, 0x97,
	0xe4, 0x0b, 0x89, 0x24, 0x95, 0x16, 0x67, 0xe6, 0xa5, 0x16, 0x17, 0x07, 0x21, 0xc9, 0x49, 0x49,
	0xa7, 0xe7, 0xe7, 0xa7, 0xe7, 0xa4, 0xea, 0x83, 0xd5, 0x24, 0x95, 0xa6, 0xe9, 0xa7, 0xe6, 0x16,
	0x94, 0x54, 0x42, 0xb4, 0x28, 0x95, 0x71, 0x09, 0x38, 0x41, 0x35, 0x39, 0x27, 0x96, 0xa4, 0xa6,
	0xe7, 0x17, 0x55, 0x0a, 0xe9, 0x71, 0x09, 0x25, 0xa1, 0x89, 0x79, 0xba, 0x48, 0x30, 0x2a, 0x30,
	0x6a, 0x30, 0x07, 0x61, 0x91, 0x11, 0x32, 0xe2, 0x12, 0x41, 0x17, 0xf5, 0x4b, 0xcc, 0x4d, 0x95,
	0x60, 0x52, 0x60, 0xd4, 0xe0, 0x0c, 0xc2, 0x2a, 0xa7, 0x94, 0xc3, 0x25, 0x84, 0x66, 0x6f, 0x66,
	0x6a, 0xb1, 0x50, 0x18, 0x86, 0xcd, 0x99, 0xa9, 0xc5, 0x12, 0x8c, 0x0a, 0xcc, 0x1a, 0xdc, 0x46,
	0x6a, 0x7a, 0xd8, 0x7c, 0xa7, 0x87, 0xee, 0xfa, 0x20, 0x2c, 0x26, 0x18, 0x95, 0x71, 0x89, 0xa3,
	0xab, 0x0b, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x15, 0x8a, 0xe6, 0x12, 0x75, 0x4f, 0x2d, 0xc1,
	0xe2, 0x16, 0x31, 0x3d, 0x48, 0xb8, 0xe9, 0xc1, 0xc2, 0x4d, 0xcf, 0x15, 0x14, 0x6e, 0x52, 0x1a,
	0x44, 0xb9, 0x23, 0x33, 0xb5, 0x58, 0x89, 0x21, 0x89, 0x0d, 0xac, 0xd7, 0x18, 0x10, 0x00, 0x00,
	0xff, 0xff, 0xff, 0x82, 0xcb, 0x52, 0xba, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BusinessCategoryServiceClient is the client API for BusinessCategoryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BusinessCategoryServiceClient interface {
	GetBusinessCategories(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*BusinessCategories, error)
}

type businessCategoryServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBusinessCategoryServiceClient(cc grpc.ClientConnInterface) BusinessCategoryServiceClient {
	return &businessCategoryServiceClient{cc}
}

func (c *businessCategoryServiceClient) GetBusinessCategories(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*BusinessCategories, error) {
	out := new(BusinessCategories)
	err := c.cc.Invoke(ctx, "/businessRegistration.BusinessCategoryService/GetBusinessCategories", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BusinessCategoryServiceServer is the server API for BusinessCategoryService service.
type BusinessCategoryServiceServer interface {
	GetBusinessCategories(context.Context, *empty.Empty) (*BusinessCategories, error)
}

// UnimplementedBusinessCategoryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBusinessCategoryServiceServer struct {
}

func (*UnimplementedBusinessCategoryServiceServer) GetBusinessCategories(ctx context.Context, req *empty.Empty) (*BusinessCategories, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBusinessCategories not implemented")
}

func RegisterBusinessCategoryServiceServer(s *grpc.Server, srv BusinessCategoryServiceServer) {
	s.RegisterService(&_BusinessCategoryService_serviceDesc, srv)
}

func _BusinessCategoryService_GetBusinessCategories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusinessCategoryServiceServer).GetBusinessCategories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/businessRegistration.BusinessCategoryService/GetBusinessCategories",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusinessCategoryServiceServer).GetBusinessCategories(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _BusinessCategoryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "businessRegistration.BusinessCategoryService",
	HandlerType: (*BusinessCategoryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBusinessCategories",
			Handler:    _BusinessCategoryService_GetBusinessCategories_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "registration/registration.proto",
}
